name: "QA"

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Login to ECR
        id: ecr-login
        uses: docker/login-action@v1
        with:
          registry: ${{ steps.ecr-login.outputs.registry }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Base environment image
        uses: docker/build-push-action@v3
        with:
          push: true
          file: docker-builds/base/Dockerfile
          tags: |
            ${{ secrets.ECR_REGISTRY }}/namebazaar-base:${{ github.sha }}
            ${{ secrets.ECR_REGISTRY }}/namebazaar-base:latest

      - name: Build and push Server
        uses: docker/build-push-action@v3
        with:
          push: ${{ github.event_name == 'push' }}
          file: docker-builds/base/Dockerfile
          tags: |
            ${{ secrets.ECR_REGISTRY }}/namebazaar-server:${{ github.sha }}-qa
            ${{ secrets.ECR_REGISTRY }}/namebazaar-server:latest-qa
          build-args: |
            BUILD_ENV=qa

      - name: Build and push UI
        uses: docker/build-push-action@v3
        with:
          push: true
          file: docker-builds/base/Dockerfile
          tags: |
            ${{ secrets.ECR_REGISTRY }}/namebazaar-ui:${{ github.sha }}-qa
            ${{ secrets.ECR_REGISTRY }}/namebazaar-ui:latest-qa
          build-args: |
            BUILD_ENV=qa
  trivy:
    needs: build-and-push
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        image: [ 'server', 'ui' ]
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@2a2157eb22c08c9a1fac99263430307b8d1bc7a2
        with:
          image-ref: '${{ secrets.ECR_REGISTRY }}/namebazaar-${{ matrix.image }}:${{ github.sha }}-qa'
          format: 'template'
          template: '@/contrib/sarif.tpl'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'
